package es.alejandro12120.igor.updates;

import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.google.gson.JsonPrimitive;
import es.alejandro12120.igor.Igor;
import es.alejandro12120.igor.utils.Common;
import es.alejandro12120.igor.utils.JSON;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import net.dv8tion.jda.core.EmbedBuilder;
import net.dv8tion.jda.core.MessageBuilder;
import net.dv8tion.jda.core.entities.Message;

public class UpdateManager {

	private static UpdateManager instance;

	private boolean updateMode = false;

	public UpdateManager() {
		instance = this;
	}

	public void update() {
		setUpdatedMode(true);
		String newversion = Common.getFortniteWindowsVersion();
		int total = Common.getTotalPakCount();
		int encrypted = Common.getEncryptedPakCount();
		boolean newAes = isNewAESKey();
		
		for (int i = 0; i < JSON.getUpdatesArray().size(); i++) {
			String id = JSON.getUpdatesArray().get(i).getAsString();
			EmbedBuilder embd = new EmbedBuilder();
			
			Message entering = new MessageBuilder("Fortnite got updated to '" + newversion + "' entering on update mode...").build();
			Igor.jda.getTextChannelById(id).sendMessage(entering).queue();

			embd.setTitle("Fortnite Update to '" + newversion + "'.");
			embd.addField("Total Pak Count", String.valueOf(total), false);
			embd.addField("Encrypted Pak Count", String.valueOf(encrypted), true);
			//embd.addField("Did main AES Key change?", (newAes ? "Yes" : "No"), false);
			embd.setFooter("Generated by Igor.", Igor.jda.getSelfUser().getAvatarUrl());
			embd.setColor(newAes ? 0xff0000: 0x11ff00);
			Igor.jda.getTextChannelById(id).sendMessage(embd.build()).queue();
			embd.clear();

			if(newAes) {
				Igor.jda.getTextChannelById(id).sendMessage("@everyone | Fortnite got updated to "+newversion+". The old key is not working anymore.").queue();
			}
			
			//send leaks
			
			Message leaving = new MessageBuilder("Finished updating to '" + newversion + "' leaving update mode, ENJOY!").build();
			Igor.jda.getTextChannelById(id).sendMessage(leaving).queue();

		}
		setUpdatedMode(false);
	}

	public boolean isInUpdateMode() {
		return updateMode;
	}

	public void setUpdatedMode(boolean b) {
		this.updateMode = b;
	}

	public static UpdateManager getUpdateManager() {
		return instance;
	}

	private boolean isNewAESKey() {
		try {
			URL url = new URL("http://benbotfn.tk:8080/api/aes");
			URLConnection request = url.openConnection();
			request.connect();

			JsonParser jp = new JsonParser();
			JsonElement element = jp.parse(new InputStreamReader((InputStream) request.getContent()));
			JsonObject obj = element.getAsJsonObject();

			return !obj.get("mainKey").getAsString().equalsIgnoreCase(Common.getAESKey());
		}catch(Exception ex) {
			ex.printStackTrace();
		}
		return false;
	}
	
}
